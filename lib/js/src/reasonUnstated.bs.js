// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var $$Error = Caml_exceptions.create("ReasonUnstated.Error");

function MakeContainer(Container) {
  var context = React.createContext(undefined);
  var makeProps = function (initialState, children, param) {
    return {
            value: initialState,
            children: children
          };
  };
  var make = context.Provider;
  var ContextProvider = /* module */[
    /* context */context,
    /* makeProps */makeProps,
    /* make */make
  ];
  var ReasonUnstated$MakeContainer$Provider = function (Props) {
    var initialState = Props.initialState;
    var children = Props.children;
    var value = Curry._1(Container[/* useHook */0], initialState);
    return React.createElement(make, makeProps(Caml_option.some(value), children, /* () */0));
  };
  var Provider = /* module */[
    /* ContextProvider */ContextProvider,
    /* make */ReasonUnstated$MakeContainer$Provider
  ];
  var useContainer = function (param) {
    var value = React.useContext(context);
    if (value !== undefined) {
      return Caml_option.valFromOption(value);
    } else {
      throw [
            $$Error,
            "Component must be wrapped with Container.Provider"
          ];
    }
  };
  return /* module */[
          /* Provider */Provider,
          /* useContainer */useContainer
        ];
}

exports.$$Error = $$Error;
exports.MakeContainer = MakeContainer;
/* react Not a pure module */
